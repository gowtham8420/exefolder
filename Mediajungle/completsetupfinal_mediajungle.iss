; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "MediaJungle"
#define MyAppVersion "3.0"
#define MyAppPublisher "My Company, Inc."
#define MyAppURL "https://www.example.com/"
#define MyAppExeName "mediajungle_start.bat"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{58BA238C-CC76-462A-A4E4-635A9FAB760A}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
UsePreviousAppDir=no
ChangesAssociations=yes
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=MediaJungle
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "{src}\..\bin\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{src}\..\bin\data\media_custom_input.txt"; DestDir: "{app}\data"; Flags: ignoreversion
Source: "{src}\..\bin\mediajungle.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "{src}\..\bin\Mediajungle_setup.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: "{src}\..\bin\postgresql-15.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "{src}\..\bin\jdk-17.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "{src}\..\bin\node-v22.msi"; DestDir: "{app}"; Flags: ignoreversion
Source: "{src}\..\bin\mediajungle_stop.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: "{src}\..\bin\mediaReact\*"; DestDir: "{app}\mediaReact"; Flags: recursesubdirs createallsubdirs ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files  bin


[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
[Code]
var
  CustomQueryPage: TInputQueryWizardPage;
  InputValue: string;
  InputValue1: string;
  InputValue2: string;

procedure AddCustomQueryPage();
begin
  CustomQueryPage := CreateInputQueryPage(
    wpWelcome,
    'Database port number',
    'Please provide custom input',
    'Enter a port number for SQL:');

  { Add three input fields for the user to provide different port numbers }
  CustomQueryPage.Add('The default port is 9000:', False);

end;

procedure InitializeWizard();
begin
  AddCustomQueryPage();
end;

procedure CurStepChanged(CurStep: TSetupStep);
var
  FilePath: string;
  Content: string;
  ResultCode: Integer;
begin
  if CurStep = ssPostInstall then  // Trigger actions during the Post-Install step
  begin
    { Get the input values from the Custom Fields }
     CreateDir(ExpandConstant('{app}\data'));
    InputValue := CustomQueryPage.Values[0];

    { Define the destination path for the text file in the installation directory }
    FilePath := ExpandConstant('{app}\data\media_custom_input.txt');

    { Prepare the content to be saved by concatenating the values }
    Content := 'sql.server.port: ' + InputValue + #13#10;

    { Save the input values to the text file first }
    if not SaveStringToFile(FilePath, Content, False) then
    begin
      MsgBox('Error: Failed to save the input to the file: ' + FilePath +
             ' - Please check permissions or disk space.', mbError, MB_OK);
    end
    else
    begin
     
      { After saving the file, execute the batch file }
      if Exec(ExpandConstant('{app}\Mediajungle_setup.bat'), '', '', SW_HIDE, ewWaitUntilTerminated, ResultCode) then
      begin
        if ResultCode = 0 then
          
        else
          MsgBox('Batch file execution failed with error code: ' + IntToStr(ResultCode), mbError, MB_OK);
      end
      else
        MsgBox('Could not execute the batch file.', mbError, MB_OK);
    end;
  end;
end;

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: shellexec postinstall skipifsilent
